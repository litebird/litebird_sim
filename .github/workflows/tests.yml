name: Tests

on: [push]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        mpi: ["none", mpich, openmpi]
        python: [3.7, 3.9]
        exclude:
          - os: macos-latest
            mpi: mpich
            python: 3.7
          - os: macos-latest
            mpi: mpich
            python: 3.9

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      # Unfortunately we must use different keys to store the same data,
      # otherwise GitHub will complain when multiple jobs are going to
      # store it
      - name: Cache PySM3 data files
        id: cache-pysm3
        uses: actions/cache@v2
        with:
          path: ~/pysm3-data
          key: pysm3-data-${{ runner.os }}-${{ matrix.python }}-${{ matrix.mpi }}-${{ secrets.CACHE_VERSION }}


      - name: Register PySM3 data path
        run: |
          echo "PYSM_LOCAL_DATA=$HOME/pysm3-data" >> $GITHUB_ENV

      - name: Download PySM3 data files
        if: steps.cache-pysm3.outputs.cache_hit != 'true'
        run: |
          git clone https://github.com/galsci/pysm-data "$PYSM_LOCAL_DATA"

      - name: Install dependencies
        run: |
          ./bin/install-deps.sh ${{ matrix.mpi }}
          pip install poetry
          mkdir -p $HOME/.config/litebird_imo
          echo -e "[[repositories]]\nlocation = \"$(pwd)/test/mock_imo/\"\nname = \"Mock IMO\"" | tee $HOME/.config/litebird_imo/imo.toml

      - name: Install litebird_sim
        run: |
          EXTRAS=""
          if [ "${{ matrix.mpi }}" != "none" ]; then
            EXTRAS="$EXTRAS -E mpi"
          fi
          poetry install $EXTRAS
        env:
          DUCC0_OPTIMIZATION: none

      - name: Enable rich traceback
        run: |
          export DESTPATH="$(poetry env info -p)/lib/python${{ matrix.python }}/site-packages/sitecustomize.py"
          echo -e "from rich.traceback import install\ninstall(show_locals=True)\n" > "$DESTPATH"
          echo "$DESTPATH"
          cat "$DESTPATH"
          
      - name: Tests
        run: bash ./bin/run_tests.sh

      - name: Tests MPICH
        if: ${{ matrix.mpi == 'mpich' }}
        run: |
            for proc in 1 5 9 ; do
              echo "Running MPI test ($MPI) with $proc processes"
              mpiexec -n $proc poetry run python3 ./test/test_mpi.py
            done

      - name: Tests OpenMPI
        if: ${{ matrix.mpi == 'openmpi' }}
        run: |
            for proc in 1 2 ; do
              echo "Running MPI test ($MPI) with $proc processes"
              mpiexec -n $proc poetry run python3 ./test/test_mpi.py
            done
